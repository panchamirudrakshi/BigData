Question 1:

val dataset=sc.textFile("/yelpdatafall/business/business.csv").map(line=>line.split("\\^"))
val dataset1=dataset.map(line=>(line(0),line(1).toString+line(2).toString))
val dataset2=sc.textFile("/yelpdatafall/review/review.csv").map(line=>line.split("\\^"))
val sumofstars=dataset2.map(line=>(line(2),line(3).toDouble)).reduceByKey((a,b)=>a+b).distinct
val count=dataset2.map(line=>(line(2),1)).reduceByKey((a,b)=>a+b).distinct
val sumandcount=sumofstars.join(count)
val review=sumandcount.map(a=>(a._1,a._2._1/a._2._2))
val res=dataset1.join(review).distinct.collect()
val sortedres=res.sortWith(_._2._2>_._2._2).take(10)
sortedres.foreach(line=>println(line._1,line._2._1,line._2._2))

Question 2:

val data13=sc.textFile("/yelpdatafall/user/user.csv").map(line=>line.split("\\^"))
val data1rev=sc.textFile("/yelpdatafall/review/review.csv").map(line=>line.split("\\^"))
val sumratings=data1rev.map(line=>(line(1),line(3).toDouble)).reduceByKey((a,b)=>a+b).distinct 
val count=data1rev.map(line=>(line(1),1)).reduceByKey((a,b)=>a+b).distinct 
val mergecolums=sumratings.join(count) 
val review=mergecolums.map(a=>(a._1,a._2._1/a._2._2))
val cons=Console.readLine()
val check=data13.filter(line=>line(1).contains(a)).map(line=>(line(0).toString,line(1).toString))
val userData=data13.map(line=>(line(0).toString,line(1).toString))
val res=review.join(userData)
val finalres=res.join(check)
finalres.foreach(line=>println(line._2._2._1,line._2._2._2))

Question 3:

val dataset=sc.textFile("/yelpdatafall/business/business.csv").map(line=>line.split("\\^"))
val filter=dataset.filter(line=>line(1).contains("Stanford")).map(line=>(line(0).toString,line(1).toString))
val dataset2=sc.textFile("/yelpdatafall/review/review.csv").map(line=>line.split("\\^"))
val jtable = dataset2.map(line=>(line(2).toString,(line(1).toString,line(3).toDouble)))
val res=jtable.join(filter)
res.foreach(line=>println(line._2._1))


Question 4:

val dataset=sc.textFile("/yelpdatafall/user/user.csv").map(line=>line.split("\\^"))
val dataset1=dataset.map(line=>(line(0),line(1).toString))
val dataset2=sc.textFile("/yelpdatafall/review/review.csv").map(line=>line.split("\\^"))
val count=dataset2.map(line=>(line(1),1)).reduceByKey((a,b)=>a+b).distinct
val joinres=dataset1.join(count).distinct.collect()
val sortedres=joinres.sortWith(_._2._2>_._2._2).take(10)
sortedres.foreach(line=>println(line._1,line._2._1,line._2._2))


Question 5:

val dataset=sc.textFile("/yelpdatafall/business/business.csv").map(line=>line.split("\\^"))
val filter=dataset.filter(line=>line(1).contains("TX")).map(line=>(line(0).toString,line(1).toString))
val dataset2=sc.textFile("/yelpdatafall/review/review.csv").map(line=>line.split("\\^"))
val count=dataset2.map(line=>(line(2),1)).reduceByKey((a,b)=>a+b)
val joinres=filter.join(count)
joinres.foreach(line=>println(line._1,line._2._2))
